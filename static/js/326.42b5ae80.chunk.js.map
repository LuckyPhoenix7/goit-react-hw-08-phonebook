{"version":3,"file":"static/js/326.42b5ae80.chunk.js","mappings":"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","sources":["redux/selectors.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { selectContacts } from 'redux/selectors';\nimport toast from 'react-hot-toast';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  FormErrorMessage,\n  VStack,\n  useColorModeValue,\n  Box,\n} from '@chakra-ui/react';\n\nconst PhonebookSchema = Yup.object().shape({\n  name: Yup.string().min(3).required('Name is required'),\n  number: Yup.string()\n    .matches(\n      /^\\d{3}-\\d{3}-\\d{4}$/,\n      'Phone number is not valid. Must be XXX-XXX-XXXX'\n    )\n    .required('Phone number is required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const currentContacts = useSelector(selectContacts);\n\n  const formBackgroundColor = useColorModeValue('teal.200', 'teal.700');\n  const buttonBackgroundColor = useColorModeValue('teal.100', 'teal.600');\n  const buttonHoverColor = useColorModeValue('teal.300', 'teal.500');\n\n  return (\n    <Box\n      bg={formBackgroundColor}\n      p={6}\n      boxShadow=\"base\"\n      borderRadius=\"md\"\n      mx=\"auto\"\n      my={8}\n    >\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={PhonebookSchema}\n        onSubmit={(values, actions) => {\n          const isContactExists = currentContacts.some(\n            contact => contact.name.toLowerCase() === values.name.toLowerCase()\n          );\n          if (isContactExists) {\n            toast.error(`${values.name} is already in the phonebook`);\n          } else {\n            dispatch(addContact({ name: values.name, number: values.number }));\n            actions.resetForm();\n            toast.success(`${values.name} added to the phonebook`);\n          }\n        }}\n      >\n        {props => (\n          <Form>\n            <VStack spacing={4} align=\"start\" maxW=\"100%\" mx=\"auto\">\n              <Field name=\"name\">\n                {({ field, form }) => (\n                  <FormControl\n                    isInvalid={form.errors.name && form.touched.name}\n                  >\n                    <FormLabel htmlFor=\"name\">Name</FormLabel>\n                    <Input {...field} id=\"name\" placeholder=\"Enter name\" />\n                    <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n\n              <Field name=\"number\">\n                {({ field, form }) => (\n                  <FormControl\n                    isInvalid={form.errors.number && form.touched.number}\n                  >\n                    <FormLabel htmlFor=\"number\">Number</FormLabel>\n                    <Input\n                      {...field}\n                      id=\"number\"\n                      placeholder=\"Enter number XXX-XXX-XXXX\"\n                    />\n                    <FormErrorMessage>{form.errors.number}</FormErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n\n              <Button\n                mt={4}\n                mx=\"auto\"\n                type=\"submit\"\n                bg={buttonBackgroundColor}\n                _hover={{\n                  bg: buttonHoverColor,\n                }}\n              >\n                Add contact\n              </Button>\n            </VStack>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n","import { Box, Button, Flex, Text } from '@chakra-ui/react';\nimport { FiUser, FiUserX } from 'react-icons/fi';\nimport { AiOutlinePhone } from 'react-icons/ai';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport toast from 'react-hot-toast';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => {\n        toast.success('Contact deleted successfully');\n      })\n      .catch(() => {\n        toast.error('Failed to delete contact');\n      });\n  };\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Box>\n        <Flex alignItems=\"center\">\n          <FiUser size=\"1.2em\" />\n          <Text ml=\"2\">{name}</Text>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <AiOutlinePhone size=\"1.2em\" />\n          <Text ml=\"2\">{number}</Text>\n        </Flex>\n      </Box>\n\n      <Button borderRadius=\"5px\" px=\"3\" py=\"2\" onClick={handleDelete}>\n        <FiUserX size=\"1.2em\" />\n        <Text ml=\"2\">Delete</Text>\n      </Button>\n    </Flex>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"Loading\"\n      wrapperClass=\"MagnifyingGlass-wrapper\"\n      glassColor=\"#B2F5EA\"\n      color=\"#319795\"\n    />\n  </LoaderContainer>\n);\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { Loader } from 'components/Loader/Loader';\nimport { selectIsLoading, selectVisibleContacts } from 'redux/selectors';\nimport { Box, VStack } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  const filteredContacts = useSelector(selectVisibleContacts);\n  return (\n    <Box>\n      {isLoading && <Loader />}\n\n      <VStack spacing={4} align=\"stretch\">\n        {filteredContacts.map(contact => (\n          <Box\n            key={contact.id}\n            p={4}\n            borderWidth=\"1px\"\n            borderRadius=\"md\"\n            boxShadow=\"base\"\n          >\n            <ContactItem\n              name={contact.name}\n              number={contact.number}\n              id={contact.id}\n            />\n          </Box>\n        ))}\n      </VStack>\n    </Box>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nimport {\n  Box,\n  FormControl,\n  Input,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  const filterBgColor = useColorModeValue('teal.200', 'teal.700');\n\n  return (\n    <Box\n      p={6}\n      borderWidth=\"1px\"\n      borderRadius=\"md\"\n      boxShadow=\"base\"\n      bg={filterBgColor}\n    >\n      <Text mb={2} fontSize=\"md\" fontWeight=\"bold\">\n        Find contacts by name\n      </Text>\n      <FormControl>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name to find\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\nimport { Box } from '@chakra-ui/react';\nimport toast from 'react-hot-toast';\nimport { selectError } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(`Error loading contacts: ${error}`);\n    }\n  }, [error]);\n\n  return (\n    <Box maxW=\"xl\" mx=\"auto\" mt={8} w=\"90%\">\n      <Box mb={4}>\n        <ContactForm />\n      </Box>\n      <Box mb={4}>\n        <Filter />\n      </Box>\n      <Box>\n        <ContactList />\n      </Box>\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","PhonebookSchema","Yup","shape","min","required","number","matches","ContactForm","dispatch","useDispatch","currentContacts","useSelector","formBackgroundColor","useColorModeValue","buttonBackgroundColor","buttonHoverColor","bg","p","boxShadow","borderRadius","mx","my","initialValues","validationSchema","onSubmit","values","actions","some","toast","addContact","resetForm","props","spacing","align","maxW","field","form","isInvalid","errors","touched","htmlFor","I","id","placeholder","mt","type","_hover","ContactItem","justifyContent","alignItems","size","ml","px","py","onClick","deleteContact","unwrap","then","catch","LoaderContainer","styled","Loader","visible","height","width","ariaLabel","wrapperClass","glassColor","color","ContactList","filteredContacts","map","borderWidth","Filter","filterBgColor","mb","fontSize","fontWeight","value","onChange","event","setFilter","target","Contacts","useEffect","fetchContacts","w"],"sourceRoot":""}